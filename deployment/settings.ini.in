;
; vigigraph - Pylons development environment configuration
;
; The %(here)s variable will be replaced with the parent directory of this file
;
; This file is for deployment specific config options -- other configuration
; that is always required for the app is done in the config directory,
; and generally should not be modified by end users.

[DEFAULT]
debug = false
; Uncomment and replace with the address which should receive any error reports
;email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 80

[app:main]
use = egg:vigilo-vigigraph

;
; Configuration de VigiGraph
;

;
; 1 - Configuration de la base de données.
;

; URL d'accès à la base de données.
sqlalchemy.url = postgresql://vigilo:vigilo@127.0.0.1/vigilo

; Options de bas niveau de la couche ORM
; (pour déboguer les requêtes SQL).
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600
sqlalchemy.pool_size = 20
sqlalchemy.max_overflow = 100

;
; 2 - Configuration des éléments de sécurité.
;

; Liste des algorithmes de hachage des mots de passe acceptables,
; séparés par des espaces.
;
; Le premier algorithme disponible parmi cette liste sera utilisé
; pour hacher les nouveaux mots de passes ou pour mettre à jour
; les condensats générés avec un ancien algorithme devenu obsolète.
;
; Les algorithmes supportés sont :
;   apr_md5_crypt, atlassian_pbkdf2_sha1,  bcrypt, bigcrypt, bsdi_crypt,
;   crypt16, cta_pbkdf2_sha1, des_crypt, django_des_crypt, django_disabled,
;   django_salted_md5, django_salted_sha1, dlitz_pbkdf2_sha1, fshp,
;   grub_pbkdf2_sha512, hex_md4, hex_md5, hex_sha1, hex_sha256, hex_sha512,
;   ldap_bcrypt, ldap_bsdi_crypt, ldap_des_crypt, ldap_hex_md5, ldap_hex_sha1,
;   ldap_md5, ldap_md5_crypt, ldap_pbkdf2_sha1, ldap_pbkdf2_sha256,
;   ldap_pbkdf2_sha512, ldap_plaintext, ldap_salted_md5, ldap_salted_sha1,
;   ldap_sha1, ldap_sha1_crypt, ldap_sha256_crypt, ldap_sha512_crypt,
;   md5_crypt, mysql323, mysql41, nthash, oracle10, oracle11, pbkdf2_sha1,
;   pbkdf2_sha256, pbkdf2_sha512, phpass, plaintext, postgres_md5,
;   roundup_plaintext, sha1_crypt, sha256_crypt, sha512_crypt, sun_md5_crypt,
;   unix_fallback.
;
; Note : en fonction des bibliothèques installées sur le système et de leur
;        version, certains algorithmes peuvent ne pas être disponibles.
;
; Vérifiez régulièrement les canaux de communication dédiés à la sécurité
; informatique pour vous assurer que les algorithmes listés ici sont toujours
; considérés comme sûrs et les déplacer au besoin vers les algorithmes
; listés dans "deprecated_password_schemes".
password_schemes=sha256_crypt

; Liste des algorithmes de hachage des mots de passe devenus obsolètes,
; séparés par des espaces.
;
; Note : un mot de passe haché avec l'un de ces algorithmes sera automatiquement
;        converti pour utiliser le premier algorithme disponible défini dans
;        l'option "password_schemes".
;
; Les algorithmes supportés sont les mêmes que pour l'option "password_schemes".
deprecated_password_schemes=hex_md5

; La clé secrète utilisée pour chiffrer/déchiffrer la session.
; Vous DEVEZ changer cette valeur avant la mise en production.
; Vous pouvez utilisez la même valeur que pour la clé
; "sa_auth.cookie_secret".
beaker.session.secret = vigilo

; La clé secrète utilisée pour chiffrer/déchiffrer le cookie
; d'authentification.
; Vous DEVEZ changer cette valeur avant la mise en production.
; Vous pouvez utilisez la même valeur que pour la clé
; "beaker.session.secret".
sa_auth.cookie_secret = vigilo

; Fichier de configuration définissant la politique de gestion
; de l'authentification.
auth.config = %(here)s/who.ini

; Liste des noms des groupes d'utilisateurs privilégiés,
; séparés par des virgules.
; Par défaut : "managers"
admin_groups = managers

;
; 3 - Configuration de l'interface.
;

; La langue par défaut de l'interface.
lang = fr

; Lien d'aide (redirigeant vers la documentation de Vigilo
; par exemple).
help_link = http://help.example.com/vigilo

; URL vers laquelle l'icône "Maison" redirige.
; Les URLs partielles sont relatives à l'application
; (ex : "/" redirige vers la page principale de l'application).
; Utiliser une URL absolue pour pointer vers une autre application
; (ex : "http://example.com/").
home_link = /

; Délai de rafraîchissement automatique (en secondes).
refresh_delay = 30

; Nombre maximal d'entrées présentées en même temps dans une hiérarchie de
; groupes d'hôtes et de graphes.
; Si un groupe contient plus d'entrées, les entrées supplémentaires
; pourront être chargées à la demande via un lien spécifique.
; Par défaut : 20 entrées maximum
;max_menu_entries = 20

; Durée maximale en secondes de conservation en cache
; des fichiers statiques (CSS, JavaScript, images, etc.).
; La valeur 0 permet de désactiver complètement la mise en cache.
; Notes :
; * Cette valeur fournit une indication sur la gestion du cache
;   aux navigateurs, mais ils sont libres de l'ignorer.
; * Si vous utilisez des fichiers statiques personnalisés,
;   une valeur trop élevée ralentira leur prise en compte.
;cache_max_age = 0

;
; 4 - Configuration des proxies.
;

; Définition d'une méthode d'authentification, d'un identifiant
; et d'un mot de passe pour s'identifier auprès d'un éventuel
; serveur mandataire intermédiaire.
; Ces directives sont communes à tous les proxies Vigilo configurés.
; Par défaut : aucune authentification avec un serveur mandataire
; n'est tentée si l'une de ces directives est manquante.
;app_proxy_auth_method = basic
;app_proxy_auth_username = vigilo
;app_proxy_auth_password = vigilo

; Configuration du proxy Nagios.
; a) Emplacement de l'installation de Nagios sur le serveur distant.
app_path.nagios = /@NAGIOS_BIN@/
; b) Schéma ("protocole") à utiliser pour se connecter
;    à l'application. En général : http ou https.
;    Par défaut : http
;app_scheme.nagios = http
; c) Port de connexion au serveur distant hébergeant
;    l'application.
;    Par défaut : 80 si app_schema.nagios vaut "http"
;                 ou 443 si app_schema.nagios vaut "https"
;app_port.nagios = 80
; d) Le proxy agit-il comme un simple redirecteur ?
;    Les valeurs autorisées sont "true" (mode redirection) ou "false"
;    (mode proxy standard).
;    En mode redirection, les directives relatives à l'authentification
;    sont ignorées. Si le site distant nécessite une authentification,
;    elle sera demandée directement à l'utilisateur.
;    Par défaut : false
;app_redirect.nagios = true
; e) Définition d'une méthode d'authentification, d'un identifiant
;    et d'un mot de passe pour s'identifier auprès de Nagios.
;    Par défaut : aucune authentification n'a lieu si l'une de ces
;    directives est manquante.
;app_auth_method.nagios = basic
;app_auth_username.nagios = nagios
;app_auth_password.nagios = <contenu de /etc/nagios/passwd.plaintext>
; f) Définition de l'URL à interroger par défaut.
;    L'URL peut inclure le motif "{host}", qui sera remplacé par le nom
;    de l'hôte sélectionné par l'utilisateur, le cas échéant.
;    Si cette option n'est pas renseignée, "/" est utilisé comme URL
;    par défaut.
;app_default_url.nagios = /cgi-bin/status.cgi?host={host}&style=detail

; Configuration du proxy VigiRRD.
app_path.vigirrd = /vigilo/vigirrd/

;
; 5 - Configuration avancée des sessions.
;

; Le nom du dossier dans lequel les fichiers de sessions sont conservés.
cache_dir = @LOCALSTATEDIR@/cache/vigilo/sessions

; Le nom du cookie de session qui sera créé sur le navigateur
; du client.
beaker.session.key = vigigraph

; If you'd like to fine-tune the individual locations of the cache data dirs
; for the Cache data, or the Session saves, un-comment the desired settings
; here:
;beaker.cache.data_dir = %(here)s/data/cache
;beaker.session.data_dir = %(here)s/data/sessions

;
; 6 - Autres options.
; Pensez à configurer le logging dans les sections
; "loggers", "handlers" & "formatters" ci-dessous.
;

; Doit être laissé à true pour obtenir une application fonctionnelle.
full_stack = true

; Doit valoir false en production (risque de sécurité sinon).
; WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
; Debug mode will enable the interactive debugging tool, allowing ANYONE to
; execute malicious code after an exception is raised.
set debug = false

; Logging configuration
; Add additional loggers, handlers, formatters here
; Uses python's logging config file format
; http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigigraph, sqlalchemy, auth

[handlers]
keys = console,sql_log,root_log,vigigraph_log,auth_log

[formatters]
keys = generic

; If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = root_log

[logger_vigigraph]
level = INFO
handlers = vigigraph_log
qualname = vigigraph

[logger_sqlalchemy]
level = INFO
handlers = sql_log
qualname = sqlalchemy.engine

; A logger for authentication, identification and authorization -- this is
; repoze.who and repoze.what:
[logger_auth]
level = INFO
handlers = auth_log
qualname = auth

; If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql_log]
class = handlers.TimedRotatingFileHandler
args = ('@LOCALSTATEDIR@/log/vigilo/vigigraph/sql.log', 'D', 30, 12)
level = NOTSET
formatter = generic

[handler_root_log]
class = handlers.TimedRotatingFileHandler
args = ('@LOCALSTATEDIR@/log/vigilo/vigigraph/root.log', 'D', 30, 12)
level = NOTSET
formatter = generic

[handler_vigigraph_log]
class = handlers.TimedRotatingFileHandler
args = ('@LOCALSTATEDIR@/log/vigilo/vigigraph/vigigraph.log', 'D', 30, 12)
level = NOTSET
formatter = generic

[handler_auth_log]
class = handlers.TimedRotatingFileHandler
args = ('@LOCALSTATEDIR@/log/vigilo/vigigraph/auth.log', 'D', 30, 12)
level = NOTSET
formatter = generic

; If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
class = vigilo.common.logging.VigiloFormatter
