#
# vigigraph - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

[DEFAULT]
debug = true

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8082

[app:main]
use = egg:vigilo-vigigraph

password_schemes=sha256_crypt
deprecated_password_schemes=hex_md5
i18n.lang=fr
help_link=http://foo.bar/help
cache_max_age=0

; URL vers laquelle l'icône "Maison" redirige.
; Les URLs partielles sont relatives à l'application
; (ex : "/" redirige vers la page principale de l'application).
;
; Utiliser une URL absolue pour pointer vers une autre application
; (ex : "http://example.com/").
home_link = /

app.vigicore = /

; Emplacement des applications (vigirrd, Nagios, ...)
; sur les serveurs distants.
app_path.vigirrd = /
app_path.nagios = /nagios/

; Schéma ("protocol") à utiliser pour se connecter
; à l'application. En général : http ou https.
; Par défaut : http
app_scheme.vigirrd = http
app_scheme.nagios = http

; Port de connexion au serveur distant hébergeant
; l'application.
; Par défaut : 80
app_port.vigirrd = 8084
app_port.nagios = 80

; Délai de rafraîchissement (en secondes)
refresh_delay = 30

; Liste des noms des groupes d'utilisateurs privilégiés,
; séparés par des virgules.
; Par défaut : "managers"
admin_groups = managers

cache_dir = %(here)s/data
session.key = vigigraph
secret = vigilo

# If you have sqlite, here's a simple default to get you started
# in development
sqlalchemy.url=postgresql://vigilo:vigilo@127.0.0.1/vigilo
#sqlalchemy.url = sqlite:///%(here)s/devdata.db
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

auth.config = %(here)s/who.ini
#auth.log_file = stdout
#auth.log_level = debug

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, vigigraph, sqlalchemy, auth

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_vigigraph]
level = DEBUG
handlers =
qualname = vigigraph

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = INFO
handlers =
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
class = vigilo.common.logging.VigiloFormatter
